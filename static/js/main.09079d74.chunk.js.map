{"version":3,"sources":["utils/builders.js","components/Header/Header.js","components/Common/Doughnut.js","utils/active.js","utils/progress.js","components/Common/Progress/Progress.js","components/Overview/Subject.js","components/Overview/Semester.js","components/Overview/Step/Summary.js","components/Overview/Steps/Step.js","components/Overview/Steps/index.js","components/Overview/Step/Header.js","seed/engelska.js","utils/persistence.js","store/courses.js","components/Overview/Step/Activites.js","components/Overview/Step/DateSelection.js","components/Overview/Step/index.js","components/Overview/Overview.js","components/News/News.js","components/Menu/Header.js","components/Menu/Dots.js","components/Menu/Subject.js","components/Menu/Menu.js","App.js","serviceWorker.js","store/store.js","store/rootReducer.js","index.js"],"names":["name","color","steps","options","label","href","Header","location","this","props","react_default","a","createElement","react","Pane","elevation","map","option","apperance","pathname","Link","key","to","className","Button","appearance","Component","withRouter","Doughnut","p","percentage","react_chartjs_2_es","legend","data","datasets","backgroundColor","hoverBackgroundColor","cutoutPercentage","tooltips","enabled","subtaskIsActive","subTask","selected","taskIsActive","task","_","some","subTasks","stepIsActive","step","tasks","courseIsActive","course","getStatsForTasks","active","filter","done","countBy","st","completed","true","left","false","total","length","getStepProgress","stats","reduce","c","_ref","getCourseProgress","activeSteps","sum","Progress","_this$props","percent","text","rest","Object","objectWithoutProperties","innerText","concat","Card","assign","height","width","overflow","background","marginTop","textAlign","Text","Subject","progress","currentStep","find","s","cursor","padding","marginBottom","Strong","number","Progress_Progress_Progress","Math","round","display","i","borderLeft","Semester","xs","courses","totalProgress","Subject_Subject","Doughnut_Doughnut","connect","state","Summary","title","UnorderedList","ListItem","id","Step","subject","Heading","is","alignItems","Summary_Summary","Steps","match","params","Step_Step","Redirect","day","selectedDate","justifyContent","borderBottom","paddingBottom","size","flex","marginLeft","flexDirection","minWidth","maxWidth","maxHeight","minHeight","as","format","stepID","taskID","courseID","subTaskID","createTask","arguments","undefined","createStep","createCourse","save","localStorage","setItem","JSON","stringify","objectSpread","valueOf","serialize","updateIn","collection","value","fn","entity","updateWithIDFn","defineProperty","initalState","getItem","parse","moment","read","engelska","Activities","selectSubtask","subtaskID","_this","toggleSubtask","_this2","listStyleType","toConsumableArray","listStylePosition","onClick","bind","intent","type","generateDates","memoize","today","range","n","clone","add","DateSelection","setDate","date","toString","_match$params","Step_Header_Header","Step_DateSelection","Activites","Overview","Switch","Route","path","component","News","IconButton","icon","Array","keys","Dots","remaining","position","marginRight","top","opacity","Avatar","isSolid","showContent","toggleShowContent","setState","completeSubtask","flatten","toUpperCase","Dots_Dots","Pill","iconColor","Menu","activeCourses","Menu_Header","components_Menu_Subject","locale","App","boxSizing","components_Header_Header","exact","margin","components_Menu_Menu","Boolean","window","hostname","initialState","combineReducers","action","updateCourse","x","store","createStore","rootReducer","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09079d74.chunk.js","sourcesContent":["let stepID = 0;\nlet taskID = 0;\nlet courseID = 0;\nlet subTaskID = 0;\n\nexport const createTask = (title, subTasks = []) => ({\n  id: taskID++,\n  title,\n  subTasks: subTasks.map(s => ({ \n    id: subTaskID++, \n    text: s,\n    completed: false,\n    selected: false\n  }))\n})\n\nexport const createStep = (number, title, tasks) => ({\n  id: stepID++,\n  number,\n  title,\n  tasks,\n  selectedDate: null\n})\n\nexport const createCourse = (name, color, steps) => {\n  return {\n    id: courseID++,\n    name,\n    color,\n    steps\n  }\n}","import React, { Component, Fragment } from 'react'\nimport styles from './Header.css'\n\nimport { Pane, Button } from 'evergreen-ui'\nimport { Link, withRouter } from 'react-router-dom'\n\nconst options = [\n  { label: 'Aktuellt', href: '/' },\n  { label: 'Schema', href: '/a' },\n  { label: 'Terminsplanering', href: '/b' },\n  { label: 'Senaste Bedömningar', href: '/c' },\n  { label: 'Terminsöversikt', href: '/overview' },\n]\n\nclass Header extends Component {\n  render() {\n    const { location } = this.props\n    const matchCurrent = (href) => location.pathname === href\n\n    return (\n      <Fragment>\n        <Pane elevation={1}>\n          {\n            options.map(option => {\n              const current = matchCurrent(option.href)\n              const apperance = current ? \"default\" : \"minimal\"\n\n              return (\n                <Link \n                  key={option.label} \n                  to={option.href} \n                  className=\"header-link\"\n                >\n                  <Button appearance={apperance}>\n                    {option.label}\n                  </Button>\n                </Link>\n              )\n            })\n          }   \n        </Pane>\n      </Fragment>\n    )\n  }\n}\n\nexport default withRouter(Header)","import React, { Component } from 'react'\n\nimport { Doughnut as CDoughnut } from 'react-chartjs-2'\n\nconst data = (p) => ({\n  datasets: [{\n    data: [p, (100 - p)],\n    backgroundColor: [\n      '#45BBA3',\n      '#FFF'\n    ],\n    hoverBackgroundColor: [\n      '#45BBA3',\n      '#FFF'\n    ]\n  }]\n})\n\nexport default class Doughnut extends Component {\n  render() {\n    const { percentage } = this.props\n\n    return (\n      <CDoughnut\n        legend={false}\n        data={data(percentage)}\n        options={{\n          cutoutPercentage: 70,\n          tooltips: {\n            enabled: false,\n          }\n        }}\n      />\n    )\n  }\n}","import _ from 'lodash'\n\nexport const subtaskIsActive = (subTask) => {\n  return subTask.selected\n}\n\nexport const taskIsActive = (task) => {\n  return _.some(task.subTasks, subtaskIsActive)\n}\n\nexport const stepIsActive = (step) => {\n  return _.some(step.tasks, taskIsActive)\n}\n\nexport const courseIsActive = (course) => {\n  return _.some(course.steps, stepIsActive)\n}","import _ from 'lodash'\nimport { subtaskIsActive, taskIsActive, stepIsActive } from './active'\n\nexport const aggregateStats = (statColl) => {\n  return statColl\n      .reduce((c, { completed, total }) => ({\n        completed: c.completed + completed,\n        total: c.total + total\n      }), { completed: 0, total: 0 })\n}\n\n\nexport const getStatsForTasks = (task) => {\n  const active = task.subTasks.filter(subtaskIsActive)\n  const done = _.countBy(active, st => st.completed)\n\n  return {\n    completed: done.true || 0,\n    left: done.false || 0,\n    total: active.length\n  }\n}\n\nexport const getTaskProgress = (task) => {\n  const { completed, total, left } = getStatsForTasks(task)\n\n  if (left === 0) {\n    if(completed === 0) {\n      return 0\n    }\n    return 100\n  }\n\n  const p = completed / total\n  return 100*p\n}\n\nexport const getStepProgress = (step) => {\n  const { tasks } = step\n  const stats = aggregateStats(tasks.map(getStatsForTasks))\n  if (stats.total === 0) {\n    return 0\n  }\n\n  return 100*stats.completed/stats.total\n}\n\nexport const getCourseProgress = (course) => {\n  const { steps } = course\n\n  const activeSteps = steps.filter(stepIsActive)\n\n  if (activeSteps.length === 0) {\n    return 0;\n  }\n\n  return _.sum(activeSteps.map(getStepProgress)) / activeSteps.length\n}","import React, { Component } from 'react'\nimport './Progress.css'\n\nimport { Card, Pane, Text } from 'evergreen-ui'\n\nexport default class Progress extends Component {\n  render() {\n    const { percent, text, color, ...rest } = this.props\n\n    const innerText = text || `${percent} %`\n\n    return (\n      <Card \n        {...rest}\n        height={30} \n        width=\"100%\" \n        backgroundColor=\"#F1F5F4\" \n        overflow=\"hidden\"\n      >\n        <Pane \n          className=\"progress-bar\"\n          height={30} \n          width={`${percent}%`} \n          background={color || \"#3EBCA3\"} \n        />\n        <Pane marginTop={-24} textAlign=\"center\">\n          <Text color=\"black\">{innerText}</Text>\n        </Pane>\n      </Card>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { \n  getCourseProgress, \n  getStepProgress \n} from '../../utils/progress'\n\nimport './Subject.css'\n\nimport { Progress } from '../Common'\nimport { Pane, Card, Text, Strong } from 'evergreen-ui'\nimport _ from 'lodash'\n\nimport { Link } from 'react-router-dom'\n\nexport default class Subject extends Component {\n  render() {\n    const { course } = this.props;\n    const { color, name, steps } = course\n    \n    const progress = getCourseProgress(course)\n    const currentStep = _.find(steps, (s) => getStepProgress(s) !== 100)\n\n    return (\n      <Link to={`/overview/${name}`} className=\"subject-link\">\n        <Pane cursor=\"pointer\" elevation={0} padding={8} marginBottom={16}>\n          <Strong color={color}>{name}</Strong>\n          <Pane>     \n            {!currentStep && <Text>Inget steg påbörjat</Text>}\n            {currentStep && <Text>Steg {currentStep.number}</Text>}\n            <Card overflow=\"hidden\">\n              <Progress color={color} percent={Math.round(progress)} />\n            </Card>\n          </Pane>\n          <Pane>\n            <Text>Termin</Text>\n            <Card display=\"flex\" overflow=\"hidden\">\n            {\n              steps.map((step, i) => {\n                return (\n                  <Progress \n                    key={step.name}\n                    color={color}\n                    percent={getStepProgress(step)} \n                    text={`Steg ${step.number}`}\n                    borderLeft={i !== 0 ? \"2px solid white\" : null}\n                  />\n                )\n              })\n            }\n            </Card>\n          </Pane>\n        </Pane>\n      </Link>\n    )\n  }\n}","import { connect } from 'react-redux'\nimport React, { Component, Fragment } from 'react'\nimport Doughnut from '../Common/Doughnut';\n\nimport { getCourseProgress } from '../../utils/progress'\n\nimport _ from 'lodash'\nimport Subject from './Subject'\nimport { Pane } from 'evergreen-ui'\n\nconst avg = (xs) => _.sum(xs) / xs.length\n\nclass Semester extends Component {\n  render() {\n    const { courses } = this.props;\n\n    const totalProgress = avg(courses.map(getCourseProgress))\n\n    return (\n      <Fragment>\n        <Pane width=\"50%\">\n          {courses.map(course => (\n            <Subject key={course.name} course={course} />\n          ))}\n        </Pane>\n        <Pane width=\"50%\" textAlign=\"center\">\n          <h1>Termin {Math.round(totalProgress)} %</h1>\n          <Doughnut percentage={totalProgress} />\n        </Pane>\n      </Fragment>\n    )\n  }\n}\n\nexport default connect(state => ({\n  courses: state.courses\n}))(Semester)","import React, { Component } from 'react'\n\nimport { Pane, Strong, UnorderedList, ListItem } from 'evergreen-ui'\n\nexport default class Summary extends Component {\n  render() {\n    const { step } = this.props\n\n    return (\n      <Pane>\n        <Strong>{step.title}</Strong>\n        <UnorderedList>\n          {\n            step.tasks.map(task => (\n              <ListItem key={task.id}>\n                {task.title}\n              </ListItem>\n            ))\n          }\n        </UnorderedList>\n      </Pane>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './Step.css'\n\nimport { getStepProgress } from '../../../utils/progress'\nimport { Link } from 'react-router-dom'\n\nimport { \n  Pane, \n  Heading\n} from 'evergreen-ui'\nimport Doughnut from '../../Common/Doughnut';\nimport Summary from '../Step/Summary';\n\nexport default class Step extends Component {\n  render() {\n    const { subject, step } = this.props\n\n    const { number } = step\n\n    return (\n      <Link to={`/overview/${subject}/${number}`} className=\"step-link\">\n        <Pane elevation={3} padding={8} width=\"100%\" marginTop={16}>\n          <Heading textAlign=\"center\" is=\"h3\">Steg {number}</Heading>\n          <Pane display=\"flex\" alignItems=\"center\">\n            <Pane width=\"25%\">\n              <Doughnut percentage={getStepProgress(step)} />\n            </Pane>\n            <Summary step={step} />\n          </Pane>\n        </Pane>\n      </Link>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Heading, Pane } from 'evergreen-ui'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport Step from './Step';\n\nimport _ from 'lodash'\n\nconst steps = [\n  { number: 18 }\n]\n\nclass Steps extends Component {\n  render() {\n    const { match, courses } = this.props;\n    const { subject } = match.params\n\n    const course = _.find(courses, c => c.name === subject)\n\n    if (!course) {\n      return <Redirect to=\"/overview\" />\n    }\n\n    return (\n      <Pane width=\"100%\">\n        <Heading is=\"h1\" color=\"#45BBA3\">\n          {course.name}\n        </Heading> \n        {\n          course.steps.map(step => (\n            <Step subject={subject} key={step.number} step={step} />\n          ))\n        }\n      </Pane>\n    )\n  }\n}\n\nexport default withRouter(connect(state => ({\n  courses: state.courses\n}))(Steps))","import React, { Component } from 'react'\nimport Doughnut from '../../Common/Doughnut';\nimport Summary from './Summary';\n\nimport { getStepProgress } from '../../../utils/progress'\nimport { Pane, Card, Heading } from 'evergreen-ui'\n\nexport default class Header extends Component {\n  render() {\n    const { step } = this.props\n    const day = step.selectedDate\n\n    return (\n      <Pane \n        textAlign=\"left\"\n        display=\"flex\" \n        alignItems=\"fill\" \n        width=\"100%\" \n        justifyContent=\"space-between\"\n        borderBottom=\"1px solid rgb(190,190,190)\"\n        paddingBottom={16}\n      >\n        <Pane width=\"25%\" display=\"flex\" alignItems=\"center\">\n          <Doughnut percentage={getStepProgress(step)} />\n        </Pane>\n        <Pane>\n          <Heading textAlign=\"center\" size={400}>Steg {step.number}</Heading>\n          <Summary step={step} />\n        </Pane>\n        {\n          step.selectedDate && (\n            <Card \n              backgroundColor=\"#45BBA3\" \n              flex={1} \n              marginLeft={16} \n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              minWidth={120}\n              maxWidth={120}\n              maxHeight={120}\n              minHeight={120}\n              >\n                <Heading size={900} color=\"white\" as=\"h1\">{day.format('D')}</Heading> \n                <Heading color=\"white\" as=\"h2\">{day.format('MMM')}</Heading> \n            </Card>\n          )\n        }\n      </Pane>\n    )\n  }\n}","import { createCourse, createStep, createTask } from '../utils/builders'\n\nexport default createCourse('Engelska', '#1DAFEB', [\n  createStep(\n    18, \n    'Vykort', [\n      createTask('Berätta och skriv om olika miljöer', [\n          'Göra någonting bra'\n        ]\n        ),\n      createTask('Typiska aktiviterer', []),\n      createTask('Läsa, förstå och skriva vykort', [])\n    ]\n  ),\n  createStep(\n    19,\n    'Läsa Noveller', [\n      createTask('Tillgodogöra sig innehållet i en novell', [\n        'Ordinlärningsstrategier' \n      ]),\n      createTask('Skriva en läslogg', [\n        'Obestämd artikel',\n        'Obestämd artikel interaktiv',\n        'Att läsa och skriva'\n      ]),\n      createTask('Återberätta det du har läst och delta i samtal om litteratur med kompisar', [\n        'Dåtid'\n      ])\n    ]\n  ),\n  createStep(\n    20,\n    'Summer Camp', [\n      createTask('Förstå och tolka innehållet i engelsk text', [\n        'A',\n        'B'\n      ]),\n      createTask('Formulera dig i en broschyr om ett summer camp och kommunicera genom att beskriva och svara på frågor om ditt summer camp', [\n        'A',\n        'B',\n        'C'\n      ])\n    ]\n  )\n])","import moment from 'moment'\n\nexport const serialize = (courses) => {\n  return JSON.stringify(courses.map(c => ({\n      ...c,\n      steps: c.steps.map(s => ({\n        ...s,\n        selectedDate: s.selectedDate && s.selectedDate.valueOf()\n      }))\n    })\n  ))\n}\n\nexport const deserialize = (data) => {\n  return JSON.parse(data)\n    .map(c => ({\n      ...c,\n      steps: c.steps.map(s => ({\n        ...s,\n        selectedDate: s.selectedDate && moment(s.selectedDate)\n      }))\n    })\n  )\n}\n\nexport const save = (courses) => {\n  localStorage.setItem('courses', serialize(courses))\n}\n\nexport const read = () => {\n  const courses = localStorage.getItem('courses')\n  return courses && deserialize(courses)\n}","import engelska from '../seed/engelska'\nimport _ from 'lodash'\nimport { read, save } from '../utils/persistence';\n\nconst SET_DATE = 'SET_DATE'\nconst TOGGLE_SUBTASK = 'TOGGLE_SUBTASK'\nconst COMPLETE_SUBTASK = 'COMPLETE_SUBTASK'\n\nconst updateIn = (collection, key, value, fn) => {\n  return collection.map(entity => {\n    if (entity[key] != value) {\n      return entity\n    }\n\n    return fn(entity)\n  })\n}\n\nconst updateWithIDFn = (collection, id, key, fn) => \n  updateIn(collection, 'id', id, entity => ({ ...entity, [key]: fn(entity[key]) }))\n\nconst updateWithID = (collection, id, key, value) => \n  updateIn(collection, 'id', id, entity => ({ ...entity, [key]: value }))\n\nexport const setDate = (courseID, stepID, date) => ({\n  type: SET_DATE,\n  courseID,\n  stepID,\n  date\n})\n\nexport const toggleSubtask = (courseID, stepID, taskID, subtaskID) => ({\n  type: TOGGLE_SUBTASK,\n  courseID,\n  stepID,\n  taskID,\n  subtaskID\n})\n\nexport const completeSubtask = (courseID, stepID, taskID, subtaskID) => ({\n  type: COMPLETE_SUBTASK,\n  courseID,\n  stepID,\n  taskID,\n  subtaskID\n})\n\n\nconst initalState = read() || [\n  engelska\n]\n\n\nexport const courses = (state = initalState, action) => {\n  save(state)\n  const updateCourse = _.bind(updateIn, null, state, 'id', action.courseID)\n\n  switch (action.type) {\n    case SET_DATE:\n      return updateCourse(course => {\n        return {\n          ...course,\n          steps: updateWithID(\n            course.steps, action.stepID, \n            'selectedDate', action.date)\n        }\n      })\n\n    case TOGGLE_SUBTASK:\n      return updateCourse(course => ({\n        ...course,\n        steps: updateWithIDFn(course.steps, action.stepID, 'tasks', tasks => \n          updateWithIDFn(tasks, action.taskID, 'subTasks', subTasks => \n            updateWithIDFn(subTasks, action.subtaskID, 'selected', x => !x)\n          )\n        )\n      }))\n\n    case COMPLETE_SUBTASK:\n      return updateCourse(course => ({\n        ...course,\n        steps: updateWithIDFn(course.steps, action.stepID, 'tasks', tasks => \n          updateWithIDFn(tasks, action.taskID, 'subTasks', subTasks => \n            updateWithIDFn(subTasks, action.subtaskID, 'completed', x => !x)\n          )\n        )\n      }))\n\n\n\n\n    default:\n      return state\n  }\n}","import { connect } from 'react-redux'\nimport React, { Component, Fragment } from 'react'\nimport { toggleSubtask } from '../../../store/courses'\n\nimport {\n  UnorderedList,\n  ListItem,\n  Button,\n  Strong\n} from 'evergreen-ui'\n\nclass Activities extends Component {\n  selectSubtask = (taskID, subtaskID) => {\n    const {\n      courseID,\n      step,\n      toggleSubtask\n    } = this.props\n\n    toggleSubtask(courseID, step.id, taskID, subtaskID)\n  }\n\n  render() {\n    const { step } = this.props\n    const { tasks } = step\n\n    return (\n      <UnorderedList\n        display=\"inline-block\"\n        width=\"100%\"\n        maxWidth=\"400px\"\n        listStyleType=\"none\"\n        marginLeft={0}\n        padding={12}\n        textAlign=\"left\"\n      >\n        {\n          tasks.map(task => {\n            return [\n              (<ListItem key={task.id} \n              >\n                <Strong>{task.title}</Strong>\n              </ListItem>),\n              ...task.subTasks.map(st => (\n                <ListItem \n                  listStylePosition=\"inside\"\n                  key={st.id}\n                >\n                  <Button \n                    onClick={this.selectSubtask.bind(this, task.id, st.id)}\n                    width=\"100%\"\n                    appearance={st.selected ? \"primary\" : \"default\"}\n                    intent=\"success\"\n                  >\n                    {st.text}\n                  </Button>\n                </ListItem>\n              ))\n            ]\n          })\n        }\n      </UnorderedList>\n    )\n  }\n}\n\nexport default connect(null, {\n  toggleSubtask\n})(Activities)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { setDate } from '../../../store/courses'\nimport { Pane, Strong, Card, Heading } from 'evergreen-ui'\nimport _ from 'lodash'\nimport moment from 'moment'\n\nconst generateDates = _.memoize(() => {\n  const today = moment()\n  return _.range(0,5).map(n => today.clone().add(n + 14, 'days'))\n})\n\nclass DateSelection extends Component {\n  setDate = (date) => {\n    const { setDate, step, courseID } = this.props\n    setDate(courseID, step.id, date)\n  }\n\n  render() {\n    return (\n      <Pane \n        textAlign=\"left\" \n        padding={20}\n        borderBottom=\"1px solid #bbb\"\n      >\n        <Strong size={600} color=\"#45BBA3\" as=\"h2\">\n          Välj Redovisningstillfälle\n        </Strong>\n        <Pane \n          display=\"flex\" \n          justifyContent=\"space-around\"\n          marginTop={16}\n        >\n          {\n            generateDates().map(day => (\n              <Card \n                cursor=\"pointer\"\n                onClick={this.setDate.bind(this, day)}\n                key={day.toString()}\n                backgroundColor=\"#45BBA3\" \n                flex={1} \n                marginLeft={16} \n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                minWidth={80}\n                maxWidth={80}\n                maxHeight={80}\n                minHeight={80}\n                >\n                <Heading size={900} color=\"white\" as=\"h1\">{day.format('D')}</Heading> \n                <Heading color=\"white\" as=\"h2\">{day.format('MMM')}</Heading> \n              </Card>\n            ))\n          }\n        </Pane>\n      </Pane>\n    )\n  }\n}\n\nexport default connect(null, { setDate })(DateSelection)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { Pane, Heading, Button } from 'evergreen-ui'\nimport Header from './Header';\nimport Activities from './Activites';\nimport { Link, Redirect } from 'react-router-dom'\n\nimport _ from 'lodash'\nimport DateSelection from './DateSelection'\n\nclass Step extends Component {\n  render() {\n    const { match, courses } = this.props;\n    const { subject, step: number } = match.params\n\n    const course = _.find(courses, c => c.name === subject)\n\n    if (!course) {\n      return <Redirect to=\"/overview/\" />\n    }\n\n    const step = _.find(course.steps, s => s.number == number)\n\n    if (!step) {\n      return <Redirect to={`/overview/${subject}`} />\n    }\n\n    return (\n      <Pane width=\"100%\" textAlign=\"center\">\n        <Link to={`/overview/${subject}`}>\n          <Heading textAlign=\"left\" is=\"h1\" color=\"#45BBA3\">\n            <Heading display=\"inline\">{subject} ></Heading>\n            {' '}\n            Steg {step.number}\n          </Heading> \n        </Link>\n        <Pane elevation={1} padding={12} marginTop={12}>\n          <Header step={step} />\n          {!step.selectedDate && <DateSelection courseID={course.id} step={step} />}\n          <Activities step={step} courseID={course.id} />\n          <Pane>\n            <Link to={`/overview/${subject}`}>\n              <Button appearance=\"primary\">\n                Klar\n              </Button>\n            </Link>\n          </Pane>\n        </Pane>\n      </Pane>\n    )\n  }\n}\n\nexport default connect(state => ({\n  courses: state.courses\n}))(Step)","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\n\nimport { Switch, Route } from 'react-router-dom'\nimport { Pane } from 'evergreen-ui'\nimport Semester from './Semester';\nimport Steps from './Steps';\nimport Step from './Step';\n\nconst subjects = [\n  {\n    name: \"Engelska\",\n    steps: [\n      { number: 18, progress: 100 },\n      { number: 19, progress: 79 },\n      { number: 20, progress: 0 }\n    ]\n  },\n  {\n    name: \"Franska\", color: \"#64CF3F\", steps: [\n      { number: 15, progress: 100 },\n      { number: 16, progress: 100 },\n      { number: 17, progress: 80 },\n      { number: 18, progress: 0 }\n    ]\n  }\n]\n\nclass Overview extends Component {\n  render() {\n    return (\n      <Pane\n        padding={16}\n        backgroundColor=\"#F8F8F8\"\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Switch>\n          <Route path=\"/overview/:subject/:step\" component={Step} />\n          <Route path=\"/overview/:subject\" component={Steps} />\n          <Route component={Semester} />\n        </Switch>\n      </Pane>\n    );\n  }\n}\n\nexport default Overview\n","import React, { Component } from 'react'\nimport styles from './News'\n\nexport default class News extends Component {\n  render() {\n    return <h1>News</h1>\n  }\n}","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport { connect } from 'react-redux'\n\nimport { getCourseProgress } from '../../utils/progress'\nimport { Pane, IconButton } from 'evergreen-ui'\nimport Progress from '../Common/Progress/Progress';\n\nconst avg = (xs) => _.sum(xs) / xs.length\n\nclass Header extends Component {\n  render() {\n    const { courses } = this.props\n    const totalProgress = avg(courses.map(getCourseProgress))\n\n    return (\n      <Pane \n        display=\"flex\" \n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Pane width=\"50%\">\n          <Progress percent={Math.round(totalProgress)} /> \n        </Pane>\n        <Pane>Vecka 39</Pane>\n        <Pane display=\"flex\">\n          <IconButton icon=\"chevron-left\" />\n          <IconButton icon=\"chevron-right\" />\n        </Pane>\n      </Pane>\n    )\n  }\n}\n\nexport default connect(state => ({\n  courses: state.courses\n}))(Header)","import React, { Component } from 'react'\n\nimport { Pane, Avatar } from 'evergreen-ui'\n\nconst range = (n) => [...Array(n).keys()]\n\nexport default class Dots extends Component {\n  render() {\n    const { n, progress } = this.props\n\n    const remaining = n - progress\n\n    return (\n      <Pane \n        position=\"relative\"\n      >\n        <Pane \n          marginLeft={10}\n          marginRight={10}\n          position=\"relative\" \n          top={14} \n          backgroundColor=\"#E4E7EB\"\n          opacity=\"0.3\"\n          borderBottom=\"4px solid gray\" \n        />\n        <Pane>\n        {range(progress).map((_, i) => (\n          <Avatar key={i} marginLeft={4} isSolid name=\" \" color=\"green\" />\n        ))}\n        {range(remaining).map((_, i) => (\n          <Avatar key={i} marginLeft={4} name=\" \" color=\"neutral\" />\n        ))}\n        </Pane>\n      </Pane>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { getStepProgress, getStatsForTasks } from '../../utils/progress'\nimport { completeSubtask } from '../../store/courses'\nimport { connect } from 'react-redux'\nimport { \n  subtaskIsActive, stepIsActive \n} from '../../utils/active'\nimport _ from 'lodash'\n\nimport './Subject.css'\n\n\nimport { \n  Pill, Card, Pane, IconButton, Strong,\n  UnorderedList, ListItem\n} from 'evergreen-ui'\nimport Dots from './Dots';\n\nclass Subject extends Component {\n  state = {\n    showContent: false\n  }\n\n  toggleShowContent = () => {\n    this.setState({\n      showContent: !this.state.showContent\n    })\n  }\n\n  completeSubtask = (stepID, taskID, subtaskID) => {\n    const { course, completeSubtask } = this.props\n    completeSubtask(course.id, stepID, taskID, subtaskID)\n  }\n\n  render() {\n    const { course } = this.props\n    const { name, steps } = course\n\n    const stats = \n      _.flatten(_.map(steps.filter(stepIsActive), 'tasks'))\n        .map(task => getStatsForTasks(task))\n        .reduce((c, { completed, total }) => ({\n          completed: c.completed + completed,\n          total: c.total + total\n        }), { completed: 0, total: 0 })\n\n    return (\n      <Card\n        backgroundColor=\"#F1F5F4\"\n      >\n        <Pane\n          onClick={this.toggleShowContent}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          padding={8}\n          backgroundColor=\"#EEEEEE\"\n          color=\"#88D0C1\"\n          borderBottom=\"1px solid rgb(160, 160, 160)\"\n        >\n          <strong>{name.toUpperCase()}</strong>\n          <Dots n={stats.total} progress={stats.completed} />\n          <IconButton \n            appearance=\"minimal\" \n            icon={this.state.showContent ? \"chevron-up\" : \"chevron-down\"}\n            />\n        </Pane>\n        {\n          this.state.showContent && (\n            <Pane>\n              {\n                steps.filter(stepIsActive).map(step => {\n                  return (\n                    <Pane key={step.id} padding={8}>\n                      <Strong>\n                        <Pill color=\"green\">{step.number}</Pill> {step.title}\n                      </Strong>\n                      <UnorderedList\n                        icon=\"circle\"\n                      >\n                        {\n                          _.flatten(_.map(step.tasks, task => {\n                            return task.subTasks\n                              .filter(subtaskIsActive)\n                              .map(st => {\n                                let props = {}\n                                if (st.completed) {\n                                  props.icon = 'full-circle'\n                                  props.iconColor = '#45BBA3'\n                                }\n\n                                return (\n                                  <ListItem \n                                    {...props}\n                                    key={st.id}\n                                    cursor=\"pointer\"\n                                    onClick={this.completeSubtask.bind(this, step.id, task.id, st.id)}\n                                  >\n                                    {st.text}\n                                  </ListItem>\n                                )\n                              })\n                          })\n                          )}\n                      </UnorderedList>\n                    </Pane>\n                  )\n                })\n              }\n            </Pane>\n          )\n        }\n      </Card>\n    )\n  }\n}\n\nexport default connect(null, {\n  completeSubtask\n})(Subject)","import React, { Component } from 'react'\nimport { \n  courseIsActive\n} from '../../utils/active'\n\nimport { connect } from 'react-redux'\nimport { Card, Pane, Text } from 'evergreen-ui'\nimport Header from './Header';\nimport Subject from './Subject';\n\nclass Menu extends Component {\n  render() {\n    const { courses } = this.props\n\n    const activeCourses = courses.filter(courseIsActive)\n\n    return (\n      <Card \n        elevation={1}\n        backgroundColor=\"#BED3CE\"\n        padding={16}\n      >\n        <Header />\n        <Pane marginTop={12}>\n          {\n            activeCourses.length === 0 ?\n            <Text>Inga Aktiva Kurser</Text>\n            :\n            activeCourses.map(course => (\n              <Subject key={course.id} course={course} />\n            ))\n          }\n        </Pane>\n      </Card>\n    )\n  }\n}\n\nexport default connect(state => ({\n  courses: state.courses\n}))(Menu)","import React, { Component } from 'react';\nimport './App.css';\n\nimport moment from 'moment'\n\nimport { Pane } from 'evergreen-ui'\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './components/Header/Header';\nimport Overview from './components/Overview/Overview';\nimport News from './components/News/News'\nimport Menu from './components/Menu/Menu';\n\nmoment.locale('sv')\n\nclass App extends Component {\n  render() {\n    return (\n      <Pane \n        display=\"flex\" \n        boxSizing=\"border-box\"\n        backgroundColor=\"white\"\n        minHeight=\"100vh\"\n        elevation={1}\n      >\n        <Pane \n          width=\"60%\" \n          marginLeft={16}             \n          marginTop={16}\n        >\n          <Header />\n          <Pane \n            elevation={3}\n            marginTop={16}\n          >\n            <Switch>\n              <Route exact path=\"/\" component={News} />\n              <Route path=\"/overview\" component={Overview} />\n            </Switch>\n          </Pane>\n        </Pane>\n        <Pane width=\"40%\" margin={16}>\n          <Menu />\n        </Pane>\n      </Pane>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux'\nimport rootReducer from './rootReducer';\n\nexport default (initialState) => {\n  return createStore(rootReducer, initialState)\n}","import { combineReducers } from 'redux'\nimport { courses } from './courses'\n\nexport default combineReducers({\n  courses\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport createStore from './store/store'\n\nconst store = createStore({})\n\nReactDOM.render(\n  (\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}